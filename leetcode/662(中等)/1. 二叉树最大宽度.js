function TreeNode(val, left, right) {
  this.val = (val === undefined ? 0 : val)
  this.left = (left === undefined ? null : left)
  this.right = (right === undefined ? null : right)
}

const max = (...args) => {
  return args.reduce(([min, max], e) => {
    return [
      e < min ? e : min,
      e > max ? e : max,
    ];
  }, [args[0], args[0]]);
};

/**
 * @param {TreeNode} root
 * @return {number}
 */
var widthOfBinaryTree = function (root) {
  const res = {};

  dfs(root, BigInt(1), 0, res);

  return Number(max(...Object.keys(res).map(key => res[key].length === 1 ? 1 : res[key][1] - res[key][0] + BigInt(1)))[1]);
};

const dfs = (root, no, level, ans) => {
  if (root === null) return;

  !ans[level] && (ans[level] = []);
  if (ans[level].length === 0) {
    ans[level].push(no);
  } else {
    ans[level][1] = no;
  }

  dfs(root.left, no * BigInt(2) - BigInt(1), level + 1, ans);
  dfs(root.right, no * BigInt(2), level + 1, ans);
}


// const tn1 = new TreeNode(1, new TreeNode(3, new TreeNode(5), new TreeNode(3)), new TreeNode(2, null, new TreeNode(9)));
// console.log(widthOfBinaryTree(tn1));
// const tn2 = new TreeNode(1, new TreeNode(3, new TreeNode(5, new TreeNode(6))), new TreeNode(2, null, new TreeNode(9, new TreeNode(7))));
// console.log(widthOfBinaryTree(tn2));
// const tn3 = new TreeNode(-64, new TreeNode(12, new TreeNode(-4, null, new TreeNode(-51, null, new TreeNode(-31, new TreeNode(-81), new TreeNode(33)))), new TreeNode(-53)), new TreeNode(18, null, new TreeNode(76, new TreeNode(-93, new TreeNode(47, new TreeNode(4, new TreeNode(78)))), new TreeNode(3, new TreeNode(3, new TreeNode(-51, new TreeNode(-35, new TreeNode(8), new TreeNode(-38, new TreeNode(-67))), new TreeNode(-64, new TreeNode(47, new TreeNode(-37, new TreeNode(3, new TreeNode(73, null, new TreeNode(-33)), new TreeNode(-38, new TreeNode(86, new TreeNode(-54), new TreeNode(-66)))), new TreeNode(80, new TreeNode(-31, new TreeNode(81, new TreeNode(-36)), new TreeNode(-42, new TreeNode(-72))), new TreeNode(-85))), new TreeNode(-19, new TreeNode(44, new TreeNode(-31, new TreeNode(98, null, new TreeNode(43)), new TreeNode(-40)), new TreeNode(-96, new TreeNode(70, null, new TreeNode(-92)), new TreeNode(-26, new TreeNode(-1, new TreeNode(-93)), new TreeNode(-98)))), new TreeNode(-88))), new TreeNode(12, new TreeNode(10, new TreeNode(-91, new TreeNode(-18, new TreeNode(24)), new TreeNode(67))), new TreeNode(-55, new TreeNode(48, new TreeNode(34, null, new TreeNode(92)), new TreeNode(72, new TreeNode(72), new TreeNode(-27, null, new TreeNode(39, new TreeNode(98))))), new TreeNode(-90, null, new TreeNode(-17)))))), new TreeNode(-44, new TreeNode(26, new TreeNode(-24, new TreeNode(72, new TreeNode(-30, new TreeNode(-77))))), new TreeNode(-81, new TreeNode(-59), new TreeNode(-49, new TreeNode(-70, null, new TreeNode(90, new TreeNode(56), new TreeNode(-65, new TreeNode(-67, new TreeNode(-84))))), new TreeNode(17, new TreeNode(-34, new TreeNode(-88), new TreeNode(-53)), new TreeNode(37)))))), new TreeNode(53, new TreeNode(-60, new TreeNode(-31, new TreeNode(-11, new TreeNode(-4)), new TreeNode(-51)), new TreeNode(27, new TreeNode(67))), new TreeNode(11, new TreeNode(60), new TreeNode(74)))))));
// console.log(widthOfBinaryTree(tn3));
// const tn4 = new TreeNode(0, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0, new TreeNode(0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
// console.log(widthOfBinaryTree(tn4)); // 2
const tn5 = new TreeNode(1, new TreeNode(3, new TreeNode(5)), new TreeNode(2));
console.log(widthOfBinaryTree(tn5)); // 2
// const tn6  = new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode(0, null, new TreeNode
// console.log(widthOfBinaryTree(tn5))

